{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,qBAAqB,yDAAyD,C;;;;;;;ACA9E,kKAAkK,oOAAoO,mTAAmT,MAAM,oLAAoL,KAAK,yIAAyI,KAAK,2G;;;;;;;;;;;;;;;;;;;ACAtgC,8EAAkD;AAClD,gFAA+D;AAC/D,IAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,kBAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACnE,CAAC;AAMF;IAKI,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,UAAK,GAAG,KAAK,CAAC;QACd,gBAAW,GAAG,EAAE,CAAC;IAIjB,CAAC;IACD,+BAAQ,GAAR;IACA,CAAC;IAED,8BAAO,GAAP;QAAA,iBAQC;QAPG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wCAAwC,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,aAAG;YACrF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,QAAQ,GAAG,EAAE;YAClB,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAC;IACN,CAAC;IAlBQ,YAAY;QALxB,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAM4B,iBAAU;OAL3B,YAAY,CAmBxB;IAAD,mBAAC;CAAA;AAnBY,oCAAY;;;;;;;;;;;;;;;;;ACVzB,kHAA0D;AAC1D,8EAAyC;AACzC,gFAAwD;AACxD,iFAA6C;AAG7C,wEAA+C;AAe/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,eAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4BAAY;aACb;YACD,OAAO,EAAE;gBACL,gCAAa;gBACb,uBAAgB;gBAChB,mBAAW;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,4BAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAb,8BAAS;;;;;;;;;;ACrBtB,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;;AAEnE,mBAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;ACPF,8EAA+C;AAC/C,0IAA2E;AAE3E,kEAA6C;AAC7C,6EAAyD;AAEzD,EAAE,CAAC,CAAC,yBAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,qBAAc,EAAE,CAAC;AACnB,CAAC;AAED,iDAAsB,EAAE,CAAC,eAAe,CAAC,sBAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"* {font-family: \\\"Comic Sans MS\\\", \\\"Comic Sans\\\", cursive;}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n    <form style=\\\"padding-bottom: 100px;padding-top:100px\\\">\\n    <input name=\\\"sentence\\\" type=\\\"text\\\" value=\\\"\\\" [(ngModel)]=\\\"this.sentence\\\" />\\n    <button (click)=\\\"this.predict()\\\">Submit</button>\\n    </form>\\n\\n    <div *ngFor=\\\"let pred of this.predictions; let i = index\\\">\\n        <div class=\\\"container\\\">\\n            \\n        <table style=\\\"padding-bottom: 30px\\\" class=\\\"table table-stripped\\\">\\n            <thead class=\\\"thead-dark\\\">\\n                <tr>\\n                    <th>Sentence:</th>\\n                <th *ngFor=\\\"let word of pred.words\\\">{{word}}</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr>\\n                    <th>POS:</th>\\n                <td *ngFor=\\\"let pos of pred.tags_pos\\\">{{pos}}</td>\\n            </tr>\\n            <tr>\\n                    <th>NER:</th>\\n                <td *ngFor=\\\"let ner of pred.tags_ner\\\">{{ner}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'app';\n    predictions = [];\n    sentence: string;\n\n    constructor(private http: HttpClient){\n    }\n    ngOnInit(){\n    }\n\n    predict(){\n        console.log(this.sentence)\n        let body = JSON.stringify(this.sentence);\n        this.http.post('http://multitask.ddnss.de:8080/predict', body, httpOptions).subscribe(res => {\n            console.log(res);\n            this.sentence = \"\"\n            this.predictions.unshift(res);\n        })\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}